# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui/main_menu_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainMenuWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(327, 524)
        MainWindow.setStyleSheet("background-color: rgb(205, 255, 181);")
        MainWindow.setIconSize(QtCore.QSize(240, 240))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.button_Questions = QtWidgets.QPushButton(self.centralwidget)
        self.button_Questions.setGeometry(QtCore.QRect(30, 150, 91, 81))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.button_Questions.setFont(font)
        self.button_Questions.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.button_Questions.setStyleSheet("QPushButton {\n"
"    background-color: transparent; /* Remove o fundo */\n"
"    border: none; /* Remove a borda */\n"
"    padding: 0px; /* Ajuste o espaçamento interno se necessário */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    /* Opcional: Adicione um efeito de hover se desejar */\n"
"    /* background-color: rgba(255, 255, 255, 50); */ /* Exemplo: um leve fundo branco transparente ao passar o mouse */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    /* Opcional: Adicione um efeito de pressionado se desejar */\n"
"    /* background-color: rgba(255, 255, 255, 100); */ /* Exemplo: um fundo branco um pouco mais opaco ao clicar */\n"
"}")
        self.button_Questions.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("ui\\../assets/quests_icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.button_Questions.setIcon(icon)
        self.button_Questions.setIconSize(QtCore.QSize(240, 70))
        self.button_Questions.setObjectName("button_Questions")
        self.button_statistic = QtWidgets.QPushButton(self.centralwidget)
        self.button_statistic.setGeometry(QtCore.QRect(210, 410, 81, 61))
        font = QtGui.QFont()
        font.setFamily("Arial Narrow")
        font.setPointSize(14)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.button_statistic.setFont(font)
        self.button_statistic.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.button_statistic.setStyleSheet("QPushButton {\n"
"    background-color: transparent; /* Remove o fundo */\n"
"    border: none; /* Remove a borda */\n"
"    padding: 0px; /* Ajuste o espaçamento interno se necessário */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    /* Opcional: Adicione um efeito de hover se desejar */\n"
"    /* background-color: rgba(255, 255, 255, 50); */ /* Exemplo: um leve fundo branco transparente ao passar o mouse */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    /* Opcional: Adicione um efeito de pressionado se desejar */\n"
"    /* background-color: rgba(255, 255, 255, 100); */ /* Exemplo: um fundo branco um pouco mais opaco ao clicar */\n"
"}")
        self.button_statistic.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("ui\\../assets/stats_icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.button_statistic.setIcon(icon1)
        self.button_statistic.setIconSize(QtCore.QSize(240, 70))
        self.button_statistic.setObjectName("button_statistic")
        self.button_Ranking = QtWidgets.QPushButton(self.centralwidget)
        self.button_Ranking.setGeometry(QtCore.QRect(10, 390, 141, 101))
        self.button_Ranking.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.button_Ranking.setStyleSheet("QPushButton {\n"
"    background-color: transparent; /* Remove o fundo */\n"
"    border: none; /* Remove a borda */\n"
"    padding: 0px; /* Ajuste o espaçamento interno se necessário */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    /* Opcional: Adicione um efeito de hover se desejar */\n"
"    /* background-color: rgba(255, 255, 255, 50); */ /* Exemplo: um leve fundo branco transparente ao passar o mouse */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    /* Opcional: Adicione um efeito de pressionado se desejar */\n"
"    /* background-color: rgba(255, 255, 255, 100); */ /* Exemplo: um fundo branco um pouco mais opaco ao clicar */\n"
"}")
        self.button_Ranking.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("ui\\../assets/icon_ranking.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.button_Ranking.setIcon(icon2)
        self.button_Ranking.setIconSize(QtCore.QSize(240, 70))
        self.button_Ranking.setObjectName("button_Ranking")
        self.button_Exit = QtWidgets.QPushButton(self.centralwidget)
        self.button_Exit.setGeometry(QtCore.QRect(290, 0, 21, 41))
        self.button_Exit.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.button_Exit.setStyleSheet("QPushButton {\n"
"    background-color: transparent; /* Remove o fundo */\n"
"    border: none; /* Remove a borda */\n"
"    padding: 0px; /* Ajuste o espaçamento interno se necessário */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    /* Opcional: Adicione um efeito de hover se desejar */\n"
"    /* background-color: rgba(255, 255, 255, 50); */ /* Exemplo: um leve fundo branco transparente ao passar o mouse */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    /* Opcional: Adicione um efeito de pressionado se desejar */\n"
"    /* background-color: rgba(255, 255, 255, 100); */ /* Exemplo: um fundo branco um pouco mais opaco ao clicar */\n"
"}\n"
"")
        self.button_Exit.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("ui\\../assets/icon_exit.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.button_Exit.setIcon(icon3)
        self.button_Exit.setIconSize(QtCore.QSize(70, 30))
        self.button_Exit.setObjectName("button_Exit")
        self.pushButton_Simulated = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_Simulated.setGeometry(QtCore.QRect(220, 150, 61, 71))
        self.pushButton_Simulated.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_Simulated.setStyleSheet("QPushButton {\n"
"    background-color: transparent; /* Remove o fundo */\n"
"    border: none; /* Remove a borda */\n"
"    padding: 0px; /* Ajuste o espaçamento interno se necessário */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    /* Opcional: Adicione um efeito de hover se desejar */\n"
"    /* background-color: rgba(255, 255, 255, 50); */ /* Exemplo: um leve fundo branco transparente ao passar o mouse */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    /* Opcional: Adicione um efeito de pressionado se desejar */\n"
"    /* background-color: rgba(255, 255, 255, 100); */ /* Exemplo: um fundo branco um pouco mais opaco ao clicar */\n"
"}")
        self.pushButton_Simulated.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("ui\\../assets/simulated_icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_Simulated.setIcon(icon4)
        self.pushButton_Simulated.setIconSize(QtCore.QSize(240, 70))
        self.pushButton_Simulated.setObjectName("pushButton_Simulated")
        self.button_Admin = QtWidgets.QPushButton(self.centralwidget)
        self.button_Admin.setGeometry(QtCore.QRect(210, 290, 71, 71))
        self.button_Admin.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.button_Admin.setStyleSheet("QPushButton {\n"
"    background-color: transparent; /* Remove o fundo */\n"
"    border: none; /* Remove a borda */\n"
"    padding: 0px; /* Ajuste o espaçamento interno se necessário */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    /* Opcional: Adicione um efeito de hover se desejar */\n"
"    /* background-color: rgba(255, 255, 255, 50); */ /* Exemplo: um leve fundo branco transparente ao passar o mouse */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    /* Opcional: Adicione um efeito de pressionado se desejar */\n"
"    /* background-color: rgba(255, 255, 255, 100); */ /* Exemplo: um fundo branco um pouco mais opaco ao clicar */\n"
"}")
        self.button_Admin.setText("")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("ui\\../assets/adm_icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.button_Admin.setIcon(icon5)
        self.button_Admin.setIconSize(QtCore.QSize(240, 70))
        self.button_Admin.setObjectName("button_Admin")
        self.label_Simulated = QtWidgets.QLabel(self.centralwidget)
        self.label_Simulated.setGeometry(QtCore.QRect(200, 250, 81, 16))
        font = QtGui.QFont()
        font.setFamily("Arial Rounded MT Bold")
        font.setPointSize(10)
        self.label_Simulated.setFont(font)
        self.label_Simulated.setObjectName("label_Simulated")
        self.label_Admin = QtWidgets.QLabel(self.centralwidget)
        self.label_Admin.setGeometry(QtCore.QRect(210, 380, 71, 20))
        font = QtGui.QFont()
        font.setFamily("Arial Rounded MT Bold")
        font.setPointSize(10)
        self.label_Admin.setFont(font)
        self.label_Admin.setObjectName("label_Admin")
        self.label_exit = QtWidgets.QLabel(self.centralwidget)
        self.label_exit.setGeometry(QtCore.QRect(280, 30, 61, 16))
        font = QtGui.QFont()
        font.setFamily("Arial Rounded MT Bold")
        font.setPointSize(6)
        self.label_exit.setFont(font)
        self.label_exit.setObjectName("label_exit")
        self.label_Question = QtWidgets.QLabel(self.centralwidget)
        self.label_Question.setGeometry(QtCore.QRect(40, 250, 81, 16))
        font = QtGui.QFont()
        font.setFamily("Arial Rounded MT Bold")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.label_Question.setFont(font)
        self.label_Question.setObjectName("label_Question")
        self.label_statistic = QtWidgets.QLabel(self.centralwidget)
        self.label_statistic.setGeometry(QtCore.QRect(200, 480, 101, 21))
        font = QtGui.QFont()
        font.setFamily("Arial Rounded MT Bold")
        font.setPointSize(10)
        self.label_statistic.setFont(font)
        self.label_statistic.setObjectName("label_statistic")
        self.label_Ranking = QtWidgets.QLabel(self.centralwidget)
        self.label_Ranking.setGeometry(QtCore.QRect(40, 480, 61, 20))
        font = QtGui.QFont()
        font.setFamily("Arial Rounded MT Bold")
        font.setPointSize(10)
        self.label_Ranking.setFont(font)
        self.label_Ranking.setObjectName("label_Ranking")
        self.button_battle = QtWidgets.QPushButton(self.centralwidget)
        self.button_battle.setGeometry(QtCore.QRect(40, 290, 81, 71))
        self.button_battle.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.button_battle.setStyleSheet("QPushButton {\n"
"    background-color: transparent; /* Remove o fundo */\n"
"    border: none; /* Remove a borda */\n"
"    padding: 0px; /* Ajuste o espaçamento interno se necessário */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    /* Opcional: Adicione um efeito de hover se desejar */\n"
"    /* background-color: rgba(255, 255, 255, 50); */ /* Exemplo: um leve fundo branco transparente ao passar o mouse */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    /* Opcional: Adicione um efeito de pressionado se desejar */\n"
"    /* background-color: rgba(255, 255, 255, 100); */ /* Exemplo: um fundo branco um pouco mais opaco ao clicar */\n"
"}")
        self.button_battle.setText("")
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("ui\\../assets/icon_battle.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.button_battle.setIcon(icon6)
        self.button_battle.setIconSize(QtCore.QSize(240, 70))
        self.button_battle.setObjectName("button_battle")
        self.label_Battle = QtWidgets.QLabel(self.centralwidget)
        self.label_Battle.setGeometry(QtCore.QRect(40, 380, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Arial Rounded MT Bold")
        font.setPointSize(10)
        self.label_Battle.setFont(font)
        self.label_Battle.setObjectName("label_Battle")
        self.Title_MainMenu = QtWidgets.QLabel(self.centralwidget)
        self.Title_MainMenu.setGeometry(QtCore.QRect(30, 60, 271, 51))
        font = QtGui.QFont()
        font.setFamily("Arial Rounded MT Bold")
        font.setPointSize(28)
        font.setBold(False)
        font.setWeight(50)
        self.Title_MainMenu.setFont(font)
        self.Title_MainMenu.setStyleSheet("color: rgb(0, 113, 0)")
        self.Title_MainMenu.setObjectName("Title_MainMenu")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_Simulated.setText(_translate("MainWindow", "SIMULADOS"))
        self.label_Admin.setText(_translate("MainWindow", "      ADM"))
        self.label_exit.setText(_translate("MainWindow", "     SAIR"))
        self.label_Question.setText(_translate("MainWindow", "QUESTÕES"))
        self.label_statistic.setText(_translate("MainWindow", "ESTATÍSTICAS"))
        self.label_Ranking.setText(_translate("MainWindow", "RANKING"))
        self.label_Battle.setText(_translate("MainWindow", "BATALHAS"))
        self.Title_MainMenu.setText(_translate("MainWindow", "Menu Principal"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainMenuWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
